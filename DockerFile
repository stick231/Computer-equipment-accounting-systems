FROM ubuntu:20.04

LABEL maintainer="stick231"

# Установка необходимых пакетов
RUN apt-get update && \
    DEBIAN_FRONTEND=noninteractive apt-get install -y --no-install-recommends \
    software-properties-common \
    gnupg2 curl ca-certificates lsb-release apt-transport-https && \
    add-apt-repository ppa:ondrej/php && \
    apt-get update

# Установка PHP и расширений
RUN apt-get install -y --no-install-recommends \
    php7.4 php7.4-fpm php7.4-cli \
    php7.4-mysql php7.4-curl php7.4-mbstring php7.4-xml php7.4-zip \
    php7.4-bcmath php7.4-intl php7.4-soap php7.4-gd php7.4-ldap \
    php7.4-redis php-xdebug nginx mysql-client git unzip

# Установка Composer
RUN curl -sS https://getcomposer.org/installer | php && \
    mv composer.phar /usr/local/bin/composer

# Установка Node.js и Yarn
RUN curl -sL https://deb.nodesource.com/setup_14.x | bash - && \
    apt-get install -y nodejs yarn

# Установка часового пояса
RUN ln -sf /usr/share/zoneinfo/Europe/Moscow /etc/localtime

# Создание директории под сокет PHP
RUN mkdir -p /run/php

# Копирование конфигов PHP-FPM
COPY .docker/php-fpm/php.ini /etc/php/7.4/fpm/php.ini
COPY .docker/php-fpm/php-fpm.conf /etc/php/7.4/fpm/php-fpm.conf

# Копирование Nginx конфигов (если есть)
COPY .docker/nginx/default.conf /etc/nginx/conf.d/default.conf
COPY .docker/nginx/nginx.conf /etc/nginx/nginx.conf


WORKDIR /var/www
COPY composer.json composer.lock ./
COPY ./www ./www

RUN composer install --no-dev --optimize-autoloader

# Копирование и установка entrypoint
COPY entrypoint.sh /entrypoint.sh
RUN chmod +x /entrypoint.sh

# Открываем порт
EXPOSE 80

# Запуск через entrypoint
CMD ["/entrypoint.sh"]
